-- Generated by Oracle SQL Developer Data Modeler 21.4.1.349.1605
--   at:        2022-01-12 17:37:28 CET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE account (
    id          INTEGER NOT NULL,
    firstname   VARCHAR2(20 CHAR),
    lastname    VARCHAR2(20 CHAR),
    jmbg        VARCHAR2(13 CHAR),
    email       VARCHAR2(20),
    username    VARCHAR2(20),
    bithday     DATE,
    password    VARCHAR2(20),
    accounttype VARCHAR2(20) NOT NULL,
    school      VARCHAR2(20) NOT NULL
);

ALTER TABLE account
    ADD CONSTRAINT ch_inh_account CHECK ( accounttype IN ( 'Account', 'Administrator', 'Student', 'Tutor' ) );

ALTER TABLE account ADD CONSTRAINT account_pk PRIMARY KEY ( id );

CREATE TABLE administrator (
    id     INTEGER NOT NULL,
    salary FLOAT
);

ALTER TABLE administrator ADD CONSTRAINT administrator_pk PRIMARY KEY ( id );

CREATE TABLE exam (
    id            INTEGER NOT NULL,
    material_id   INTEGER,
    starttime     DATE,
    endtime       DATE,
    maxpoints     INTEGER,
    studentpoints INTEGER,
    tutorreview   CLOB
);

ALTER TABLE exam
    ADD CHECK ( material_id IS NULL
                AND studentpoints IS NULL
                AND tutorreview IS NULL );

ALTER TABLE exam ADD CONSTRAINT exam_pk PRIMARY KEY ( id );

CREATE TABLE exam_questions (
    id          INTEGER NOT NULL,
    description CLOB,
    qpoints     INTEGER,
    exam_id     INTEGER NOT NULL
);

ALTER TABLE exam_questions ADD CONSTRAINT exam_questions_pk PRIMARY KEY ( id );

CREATE TABLE lesson_material (
    id          INTEGER NOT NULL,
    language    VARCHAR2(20),
    description CLOB,
    category    VARCHAR2(20),
    "Level"     VARCHAR2(20)
);

ALTER TABLE lesson_material
    ADD CHECK ( language IN ( 'Chinese', 'Danish', 'English', 'French', 'German', 'Japanese', 'Russian', 'Spanish' ) );

ALTER TABLE lesson_material
    ADD CHECK ( category IN ( 'Listening', 'Reading', 'Speaking', 'Writting' ) );

ALTER TABLE lesson_material
    ADD CHECK ( "Level" IN ( '', 'Advanced', 'Beginer-Intermediate', 'Beginner', 'Intermediate', 'Intermediate-Advanced' ) );

ALTER TABLE lesson_material ADD CONSTRAINT lesson_material_pk PRIMARY KEY ( id );

CREATE TABLE online_language_school (
    name               VARCHAR2(20) NOT NULL,
    url                VARCHAR2(20),
    privacypolicy      VARCHAR2(20),
    termsandconditions CLOB
);

ALTER TABLE online_language_school ADD CONSTRAINT school_pk PRIMARY KEY ( name );

CREATE TABLE question (
    id               INTEGER NOT NULL,
    content          CLOB,
    title            CLOB,
    response         CLOB,
    administrator_id INTEGER,
    student_id       INTEGER,
    tutor_id         INTEGER
);

ALTER TABLE question ADD CONSTRAINT question_pk PRIMARY KEY ( id );

CREATE TABLE selects_material (
    tutor   INTEGER NOT NULL,
    slot    INTEGER NOT NULL,
    lessmat INTEGER NOT NULL
);

ALTER TABLE selects_material
    ADD CONSTRAINT selects_material_pk PRIMARY KEY ( tutor,
                                                     slot,
                                                     lessmat );

CREATE TABLE slot (
    slotid     INTEGER NOT NULL,
    starttime  DATE,
    endtime    DATE,
    tutor_id   INTEGER NOT NULL,
    student_id INTEGER
);

ALTER TABLE slot ADD CONSTRAINT slot_pk PRIMARY KEY ( tutor_id,
                                                      slotid );

CREATE TABLE student (
    id INTEGER NOT NULL
);

ALTER TABLE student ADD CONSTRAINT student_pk PRIMARY KEY ( id );

CREATE TABLE tutor (
    id       INTEGER NOT NULL,
    salary   FLOAT,
    language VARCHAR2(20)
);

ALTER TABLE tutor
    ADD CHECK ( language IN ( 'Chinese', 'Danish', 'English', 'French', 'German', 'Japanese', 'Russian', 'Spanish' ) );

ALTER TABLE tutor ADD CONSTRAINT tutor_pk PRIMARY KEY ( id );

ALTER TABLE administrator
    ADD CONSTRAINT admin_account_fk FOREIGN KEY ( id )
        REFERENCES account ( id );

ALTER TABLE question
    ADD CONSTRAINT administrator_fk FOREIGN KEY ( administrator_id )
        REFERENCES administrator ( id );

ALTER TABLE exam_questions
    ADD CONSTRAINT exam_fk FOREIGN KEY ( exam_id )
        REFERENCES exam ( id );

ALTER TABLE exam
    ADD CONSTRAINT lesson_material_fk FOREIGN KEY ( material_id )
        REFERENCES lesson_material ( id );

ALTER TABLE selects_material
    ADD CONSTRAINT material_fk FOREIGN KEY ( lessmat )
        REFERENCES lesson_material ( id );

ALTER TABLE account
    ADD CONSTRAINT school_fk FOREIGN KEY ( school )
        REFERENCES online_language_school ( name );

ALTER TABLE selects_material
    ADD CONSTRAINT slot_fk FOREIGN KEY ( tutor,
                                         slot )
        REFERENCES slot ( tutor_id,
                          slotid );

ALTER TABLE slot
    ADD CONSTRAINT slot_student_fk FOREIGN KEY ( student_id )
        REFERENCES student ( id );

ALTER TABLE slot
    ADD CONSTRAINT slot_tutor_fk FOREIGN KEY ( tutor_id )
        REFERENCES tutor ( id );

ALTER TABLE student
    ADD CONSTRAINT student_account_fk FOREIGN KEY ( id )
        REFERENCES account ( id );

ALTER TABLE question
    ADD CONSTRAINT student_fk FOREIGN KEY ( student_id )
        REFERENCES student ( id );

ALTER TABLE tutor
    ADD CONSTRAINT tutor_account_fk FOREIGN KEY ( id )
        REFERENCES account ( id );

ALTER TABLE question
    ADD CONSTRAINT tutor_fk FOREIGN KEY ( tutor_id )
        REFERENCES tutor ( id );

CREATE OR REPLACE TRIGGER arc_fkarc_1_administrator BEFORE
    INSERT OR UPDATE OF id ON administrator
    FOR EACH ROW
DECLARE
    d VARCHAR2(20);
BEGIN
    SELECT
        a.accounttype
    INTO d
    FROM
        account a
    WHERE
        a.id = :new.id;

    IF ( d IS NULL OR d <> 'Administrator' ) THEN
        raise_application_error(
                               -20223,
                               'FK Admin_Account_FK in Table Administrator violates Arc constraint on Table Account - discriminator column AccountType doesn''t have value ''Administrator'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_1_tutor BEFORE
    INSERT OR UPDATE OF id ON tutor
    FOR EACH ROW
DECLARE
    d VARCHAR2(20);
BEGIN
    SELECT
        a.accounttype
    INTO d
    FROM
        account a
    WHERE
        a.id = :new.id;

    IF ( d IS NULL OR d <> 'Tutor' ) THEN
        raise_application_error(
                               -20223,
                               'FK Tutor_Account_FK in Table Tutor violates Arc constraint on Table Account - discriminator column AccountType doesn''t have value ''Tutor'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_1_student BEFORE
    INSERT OR UPDATE OF id ON student
    FOR EACH ROW
DECLARE
    d VARCHAR2(20);
BEGIN
    SELECT
        a.accounttype
    INTO d
    FROM
        account a
    WHERE
        a.id = :new.id;

    IF ( d IS NULL OR d <> 'Student' ) THEN
        raise_application_error(
                               -20223,
                               'FK Student_Account_FK in Table Student violates Arc constraint on Table Account - discriminator column AccountType doesn''t have value ''Student'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            11
-- CREATE INDEX                             0
-- ALTER TABLE                             30
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           3
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
